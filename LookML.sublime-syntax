%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
# https://www.sublimetext.com/docs/3/scope_naming.html#color_schemes

name: LookML
file_extensions:
  - lkml
scope: source.looker

contexts:
  main:
    - match: '#'
      scope: comment.looker
      push:
        - meta_scope: comment.looker
        - match: \n
          pop: true

    - match: '\b(sql_table_name|sql_on|sql)\b(: )'
      captures:
        1: keyword.control.looker
        2: punctuation.separator.looker
      push: sql

    - match: '\bhtml\b'
      scope: keyword.control.looker
      push: html

    - include: keywords
    - include: numbers
    - include: variables
    - include: constants
    - include: strings
    - include: lists


  keywords:
    - match: '\b(?i)(explore|view)\b'
      scope: entity.name.looker

    - match: '\b(?i)(filter|parameter|dimension|dimension_group|measure|set)\b: ([A-Za-z0-9_-]+) {'
      captures: 
        1: entity.name.looker
        2: storage.type.looker

    - match: '\b(?i)(label|view_label|group_label|description|label_from_parameter)\b'
      scope: keyword.control.looker

    - match: '\b(?i)(allowed_value|type|timeframes|convert_tz|datatype|hidden|value_format_name|drill_fields|filters|fields)\b'
      scope: keyword.control.looker

    - match: '\b(?i)(field|value)\b'
      scope: keyword.control.looker

    - match: '\b(string|unquoted|number|date|time|datetime|yesno)\b'
      scope: storage.type.looker

    - match: '\b(count|count_distinct|sum|average|median)\b'
      scope: storage.type.function.looker


  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.looker
      push:
        - meta_scope: string.quoted.double.looker
        - match: '"'
          scope: punctuation.definition.string.end.looker
          pop: true
    - match: "'"
      scope: punctuation.definition.string.begin.looker
      push:
        - meta_scope: string.quoted.single.looker
        - match: "'"
          scope: punctuation.definition.string.end.looker
          pop: true


  variables:
    - match: '\$\{'
      scope: punctuation.definition.variable.begin.looker
      push:
        - meta_scope: variable.language.looker
        - match: '\}'
          scope: punctuation.definition.variable.end.looker
          pop: true


  constants:
    - match: '\b(yes|no)\b'
      scope: constant.language.looker


  numbers:
    - match: '\b([1-9]+[0-9]*|0)'
      scope: constant.numeric.looker


  sql:
    - clear_scopes: true
    - include: variables
    - include: strings
    - meta_scope: string.looker

    - match: (\-|\+|\*|\/|%\/%|%%|\^|\|\|)
      scope: keyword.operator.arithmetic.looker

    - match: (=|!=|<>|<|>|<=|>=)
      scope: keyword.operator.comparison.looker

    - match: '(?i)\b(CASE|WHEN|THEN|ELSE|END)\b'
      scope: keyword.control.looker

    - match: '(?i)\b(ABS|ACOS|ASCII|ASIN|ATAN|ATAN2|AVG|CEILING|COS|COT|COUNT|COUNTD|DEGREES|DIV|EXP|FLOAT|FLOOR|HEXBINX|HEXBINY|INT|LN|LOG|MAX|MIN|NOW|NULLIF|POWER|RADIANS|ROUND|RUNNING_AVG|RUNNING_COUNT|RUNNING_MAX|RUNNING_MIN|RUNNING_SUM|SIGN|SIN|SQRT|SQUARE|STDEV|STDEVP|SUM|TAN|TOTAL|VAR|VARP|WINDOW_AVG|WINDOW_COUNT|WINDOW_MAX|WINDOW_MEDIAN|WINDOW_MIN|WINDOW_PERCENTILE|WINDOW_STDEV|WINDOW_STDEVP|WINDOW_SUM|WINDOW_VAR|WINDOW_VARP|YEAR|ATTR|CHAR|CONTAINS|ENDSWITH|EXCLUDE|FIND|FIRST|FIXED|FULLNAME|IFNULL|INCLUDE|INDEX|ISDATE|ISFULLNAME|ISMEMBEROF|ISNULL|ISUSERNAME|LAST|LEFT|LEN|LOOKUP|LOWER|LTRIM|MID|PREVIOUS_VALUE|RANK|RANK_DENSE|RANK_MODIFIED_RANK_PERCENTILE|RANK_UNIQUE|RAWSQLAGG_BOOL|RAWSQLAGG_DATE|RAWSQLAGG_DATETIME|RAWSQLAGG_INT|RAWSQLAGG_REAL|RAWSQLAGG_STR|RAWSQL_BOOL|RAWSQL_DATE|RAWSQL_DATETIME|RAWSQL_INT|RAWSQL_REAL|RAWSQL_STR|REPLACE|RIGHT|RTRIM|SCRIPT_BOOL|SCRIPT_INT|SCRIPT_REAL|SCRIPT_STR|SIZE|SPACE|SPLIT|STARTSWITH|STR|TODAY|TRIM|UPPER|USERDOMAIN|USERNAME|ZN)\b'
      scope: variable.function.looker

    - match: '\b(?i)(TRUE|FALSE|NULL|PI)\b'
      scope: constant.language.looker

    - match: '(?i)\b(CURRENT\_?DATE|DATE\_?ADD|DATE\_?DIFF|DATE\_?NAME|DATE\_?PART|DATETIME|DATE\_?TRUNC|EXTRACT|FROM|TIMESTAMP)\b'
      scope: variable.function.looker

    - match: '\b(?i)(hour|day|dayofweek|dayofyear|week|month|year)\b'
      scope: constant.language.looker

    - match: '\-\-'
      scope: comment.looker
      push:
        - meta_scope: comment.looker
        - match: \n
          pop: true

    - match: '\{\%'
      scope: punctuation.separator.looker
      push: liquid_control

    - match: ';;'
      scope: comment.looker
      pop: true


  html:
    - clear_scopes: true
    - meta_scope: string.looker

    - match: '</?'
      scope: comment.looker
      push: html_tag

    - match: '\{\%'
      scope: punctuation.separator.looker
      push: liquid_control

    - match: '\{\{'
      scope: punctuation.separator.looker
      push: liquid_variable

    - match: ';;'
      scope: comment.looker
      pop: true


  html_tag:
    - meta_scope: comment.looker

    - match: '\>'
      pop: true


  liquid_control:
    - clear_scopes: true
    - meta_scope: variable.function.looker

    - match: '\bparameter\b'
      scope: keyword.looker

    - match: '\b(if|elsif|else|endif|case|when|endcase|condition|endcondition)\b'
      scope: keyword.control.looker

    - match: (==|!=|<>|<|>|<=|>=|contains)
      scope: keyword.operator.comparison.looker

    - match: '\%\}'
      scope: punctuation.terminator.looker
      pop: true


  liquid_variable:
    - clear_scopes: true
    - meta_scope: variable.function.looker
    - match: '\}\}'
      scope: punctuation.terminator.looker
      pop: true


  lists:
    - match: '\['
      scope: punctuation.definition.variable.begin.looker
      push:
      - meta_scope: string.looker
      # - match: [a-zA-Z0-9_-]
      #   scope: storage.type.looker
      - match: '\]'
        scope: punctuation.definition.variable.end.looker
        pop: true
